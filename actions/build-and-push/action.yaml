name: 'Build and Push Docker Image'
description: 'Build and push a Docker image to Docker Hub and DigitalOcean Registry'

inputs:
  service_name:
    description: 'Service name for the Docker image'
    required: true
  docker_username:
    description: 'Docker Hub username'
    required: true
  docker_password:
    description: 'Docker Hub password'
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout foreign repository (to get Dockerfile and docker-compose.yaml)
      uses: actions/checkout@v3
      with:
        repository: knowvus/.github
        path: .github

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build project
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_password }}

    - name: Build and push Docker image to Docker Hub
      uses: docker/build-push-action@v4
      with:
        context: .github
        file: .github/Dockerfile
        push: true
        tags: |
          ${{ inputs.docker_username }}/${{ inputs.service_name }}:latest
          ${{ inputs.docker_username }}/${{ inputs.service_name }}:${{ github.sha }}
