name: Build and Deploy Docker Image
description: 'Deploy Service to Docker Swarm as Manager'

inputs:
  service_name:
    description: 'Service name for the Docker image'
    required: true
  docker_username:
    description: 'Docker Hub username'
    required: true
  docker_password:
    description: 'Docker Hub password'
    required: true
  digital_ocean_token:
    description: 'DigitalOcean API token'
    required: true
  manager_ip:
    description: 'Droplet IP address'
    required: true
  manager_root_password:
    description: 'Droplet root password'
    required: true
  infisical_client_id:
    description: 'Infisical client ID'
    required: true
  infisical_secrets:
    description: 'Infisical client secrets'
    required: true
  infisical_project_id:
    description: 'Infisical project ID'
    required: true

runs:
  using: "composite"
  steps:
        - name: Check out code
          uses: actions/checkout@v2

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2

        - name: Docker Login to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ inputs.docker_username }}
            password: ${{ inputs.docker_password }}

        - name: Install doctl
          uses: digitalocean/action-doctl@v2
          with:
            token: ${{ inputs.digital_ocean_token }}

        - name: Create a temporary .env file on the runner node
          shell: bash
          run: |
            echo "INFISICAL_CLIENT_ID=${{ inputs.infisical_client_id }}" > .env
            echo "INFISICAL_SECRET=${{ inputs.infisical_secrets }}" >> .env
            echo "INFISICAL_PROJECT_ID=${{ inputs.infisical_project_id }}" >> .env
            cat .env

        - name: Copy files to Droplet
          uses: appleboy/scp-action@v0.1.3
          with:
            host: ${{ inputs.manager_ip }}
            username: root
            key: ${{ inputs.ssh_key }} 
            password: ${{ inputs.manager_root_password }}
            source: ".env,docker-compose.yaml,Dockerfile"
            target: "/root/${{ inputs.service_name }}/"
            port: 22

        - name: SSH into Droplet and Deploy
          uses: appleboy/ssh-action@v0.1.3
          with:
            host: ${{ inputs.manager_ip }}
            username: root
            password: ${{ inputs.manager_root_password }}
            script: |
              cd /root/${{ inputs.service_name }}/

              # Verify .env file and deploy using Docker Compose
              cat .env
              docker-compose --env-file .env -f docker-compose.yaml pull
              docker-compose --env-file .env -f docker-compose.yaml up -d
            port: 22
            timeout: 5s
            command_timeout: 15s